SMARTBIN FLUTTER LAYOUT REQUIREMENTS
====================================

Your Original Request:
1. ✅ Fixed ROW HEIGHTS for bin status (not aspect ratio)
2. ✅ Always-visible draggable sash with handle graphics and resize cursor  
3. ✅ Additional vertical sashes between Image | Classification | Bin Status

Layout Structure:
┌─────────────────────────────────────────────────────────────────┐
│                     📱 SmartBin Control (AppBar)                │
├─────────────────────────────────────────────────────────────────┤
│ ┌─────────────┬─┬─────────────┬─┬─────────────────────────────┐ │ ← TOP SECTION (resizable height)
│ │   📷 Image  │ │ 🧠 Classify │ │      🗂️ Bin Status        │ │
│ │  (300px w)  │ │  (250px w)  │ │   (remaining width)        │ │
│ │             │ │             │ │                             │ │
│ │ [Image      │ │ PLASTIC     │ │ ┌─────────────────────────┐ │ │
│ │  Preview]   │ │ 94.2%       │ │ │ PLASTIC    ████▒▒ 3/10  │ │ ← 60px fixed height
│ │             │ │             │ │ └─────────────────────────┘ │ │
│ │             │ │ Recent:     │ │ ┌─────────────────────────┐ │ │
│ │             │ │ - Metal     │ │ │ METAL      █▒▒▒▒▒ 1/10  │ │ ← 60px fixed height  
│ │             │ │ - Paper     │ │ └─────────────────────────┘ │ │
│ │             │ │ - Plastic   │ │ ┌─────────────────────────┐ │ │
│ │             │ │             │ │ │ PAPER      ████▒▒ 5/10  │ │ ← 60px fixed height
│ │             │ │             │ │ └─────────────────────────┘ │ │
│ │             │ │             │ │ ┌─────────────────────────┐ │ │
│ │             │ │             │ │ │ COINS      ████████ 7/10│ │ ← 60px fixed height
│ │             │ │             │ │ └─────────────────────────┘ │ │
│ └─────────────┴─┴─────────────┴─┴─────────────────────────────┘ │
│                              ▓▓▓                                │ ← HORIZONTAL SPLITTER (always visible handle)
│ ┌─────────────────────────────────────────────────────────────┐ │ ← MESSAGE SECTION (takes remaining space)
│ │                💬 Communication Log                         │ │
│ │ ┌─────────────────────────────────────────────────────────┐ │ │
│ │ │[14:23:45] → Connecting to SmartBin...                  │ │ │
│ │ │[14:23:47] ← Device connected successfully              │ │ │
│ │ │[14:24:02] ← Image captured: 1024x768                  │ │ │
│ │ │[14:24:03] ← Classification: plastic (94.2%)           │ │ │
│ │ │[14:24:04] → Opening plastic bin...                    │ │ │
│ │ │[14:24:05] ← Bin opened successfully                   │ │ │
│ │ └─────────────────────────────────────────────────────────┘ │ │
│ └─────────────────────────────────────────────────────────────┘ │
├─────────────────────────────────────────────────────────────────┤
│ 🟢 Connected    [Disconnect Button]                             │ ← BOTTOM CONTROLS
└─────────────────────────────────────────────────────────────────┘

Key Features:
=============
1. FIXED ROW HEIGHTS: Each bin status row is exactly 60px tall (not aspect ratio based)
   - When you resize the width, the rows stay 60px tall
   - No more changing heights when resizing width

2. ALWAYS-VISIBLE SPLITTERS: 
   - Horizontal splitter: Shows handle (▓▓▓) and changes cursor to resize-row
   - Vertical splitters: Show handle (│) and change cursor to resize-column
   - Visible even when not dragging

3. MULTIPLE RESIZABLE SECTIONS:
   - Image section width: resizable (drag vertical splitter 1)
   - Classification section width: resizable (drag vertical splitter 2)  
   - Bin status: takes remaining width
   - Top section height: resizable (drag horizontal splitter)
   - Message section: takes remaining height

4. PERSISTENT STORAGE:
   - Save splitter positions in SharedPreferences
   - Restore positions on app startup

Flutter Implementation Notes:
============================
- Use LayoutBuilder for responsive constraints
- Use GestureDetector with MouseRegion for splitters
- SystemMouseCursors.resizeRow / resizeColumn for cursors
- Container with fixed height: 60 (not AspectRatio!)
- SharedPreferences for persistence
- Proper bounds checking (min/max widths/heights)
